#!/usr/bin/env python

w = open('rrtype_to_str.c', 'w')

w.write('''#include "private.h"

const char *
wdns_rrtype_to_str(uint16_t rrtype)
{
    switch (rrtype) {
''')

for line in open('../constants.h'):
    if 'WDNS_TYPE_' in line:
        wdns_type = line.split()[1]
        rrtype = wdns_type.rsplit('_', 1)[1]
        w.write('\tcase %s: return ("%s");\n' % (wdns_type, rrtype))

w.write('''    }

    return (NULL);
}
''')

w.write('''
static const char *rrtypes[] = {
''')

for line in open('../constants.h'):
    if 'WDNS_TYPE_' in line:
        wdns_type = line.split()[1]
        rrtype = wdns_type.rsplit('_', 1)[1]
        w.write('\t[%s] = "%s",\n' % (wdns_type, rrtype))

w.write('''};

uint16_t
wdns_str_to_rrtype(const char *str) {
    const char *rrtype;
    unsigned i;

    for (i = 0; i < sizeof(rrtypes) / sizeof(char *); i++) {
        rrtype = rrtypes[i];
        if (rrtype && strcasecmp(rrtype, str) == 0)
            return ((uint16_t) i);
    }

    return (0);
}
''')

w.close()
