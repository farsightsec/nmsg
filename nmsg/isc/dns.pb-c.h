/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_dns_2eproto__INCLUDED
#define PROTOBUF_C_dns_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Nmsg__Isc__Dns Nmsg__Isc__Dns;


/* --- enums --- */


/* --- messages --- */

struct  _Nmsg__Isc__Dns
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rrname;
  ProtobufCBinaryData rrname;
  protobuf_c_boolean has_rrtype;
  uint32_t rrtype;
  protobuf_c_boolean has_rrclass;
  uint32_t rrclass;
  protobuf_c_boolean has_rrttl;
  uint32_t rrttl;
  size_t n_rdata;
  ProtobufCBinaryData *rdata;
};
#define NMSG__ISC__DNS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nmsg__isc__dns__descriptor) \
    , 0,{0,NULL}, 0,0, 0,0, 0,0, 0,NULL }


/* Nmsg__Isc__Dns methods */
void   nmsg__isc__dns__init
                     (Nmsg__Isc__Dns         *message);
size_t nmsg__isc__dns__get_packed_size
                     (const Nmsg__Isc__Dns   *message);
size_t nmsg__isc__dns__pack
                     (const Nmsg__Isc__Dns   *message,
                      uint8_t             *out);
size_t nmsg__isc__dns__pack_to_buffer
                     (const Nmsg__Isc__Dns   *message,
                      ProtobufCBuffer     *buffer);
Nmsg__Isc__Dns *
       nmsg__isc__dns__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nmsg__isc__dns__free_unpacked
                     (Nmsg__Isc__Dns *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Nmsg__Isc__Dns_Closure)
                 (const Nmsg__Isc__Dns *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor nmsg__isc__dns__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_dns_2eproto__INCLUDED */
