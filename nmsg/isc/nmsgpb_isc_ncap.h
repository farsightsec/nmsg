#ifndef PBNMSG_ISC_NCAP_H
#define PBNMSG_ISC_NCAP_H

#include "ncap.pb-c.h"

#define MSGTYPE_NCAP_ID		1
#define MSGTYPE_NCAP_NAME	"ncap"

/*! \file nmsg/isc/nmsgpb_isc_ncap.h
 * \brief ISC "ncap" message type.
 *
 * This message type is meant to carry reassembled IP datagrams. It contains
 * legacy fields which enable messages generated by libncap to be converted to
 * NMSG ncap payloads.
 *
 * This module does not support conversion from presentation-form-to-NMSG
 * payload.
 *
 * See nmsg/isc/ncap.pb-c.h for the C structure definitions used when
 * manipulating ncap payloads directly.
 *
 * <b>ncap message fields.</b>

<table>

<tr>
<td><b> Name </b></td>
<td><b> Type </b></td>
<td><b> Required </b></td>
<td><b> Repeated </b></td>
<td><b> Description </b></td>
</tr>

<tr>
<td> type </td>
<td> enum NcapType </td>
<td> yes </td>
<td> no </td>
<td> Type of ncap payload </td>
</tr>

<tr>
<td> payload </td>
<td> bytes </td>
<td> yes </td>
<td> no </td>
<td> ncap payload </td>
</tr>

<tr>
<td> ltype </td>
<td> enum NcapLegacyType </td>
<td> no </td>
<td> no </td>
<td> If legacy ncap, type of legacy ncap payload </td>
</tr>

<tr>
<td> srcip </td>
<td> IP address </td>
<td> no </td>
<td> no </td>
<td> If legacy ncap, source IP address </td>
</tr>

<tr>
<td> dstip </td>
<td> IP address </td>
<td> no </td>
<td> no </td>
<td> If legacy ncap, destination IP address </td>
</tr>

<tr>
<td> lint0 </td>
<td> uint32 </td>
<td> no </td>
<td> no </td>
<td> If legacy ncap, ltype-specific integer </td>
</tr>

<tr>
<td> lint1 </td>
<td> uint32 </td>
<td> no </td>
<td> no </td>
<td> If legacy ncap, ltype-specific integer </td>
</tr>

</table>

 * <b>enum NcapType values.</b>

<table>

<tr>
<td><b> Name </b></td>
<td><b> Value </b></td>
<td><b> Description </b></td>
</tr>

<tr>
<td> IPV4 </td>
<td> 0 </td>
<td> ncap payload is an IPv4 datagram </td>
</tr>

<tr>
<td> IPV6 </td>
<td> 1 </td>
<td> ncap payload is an IPv4 datagram </td>
</tr>

<tr>
<td> Legacy </td>
<td> 2 </td>
<td> ncap payload is a legacy NCAP application layer payload </td>
</tr>

</table>

 * <b>enum NcapLegacyType values.</b>

<table>

<tr>
<td><b> Name </b></td>
<td><b> Value </b></td>
<td><b> Description </b></td>
</tr>

<tr>
<td> UDP </td>
<td> 0 </td>
<td> NCAP legacy payload is a UDP payload; lint0 is UDP source port;
	lint1 is UDP destination port </td>
</tr>

<tr>
<td> TCP </td>
<td> 1 </td>
<td> NCAP legacy payload is a TCP payload; lint0 is TCP source port;
	lint1 is TCP destination port </td>
</tr>

<tr>
<td> ICMP </td>
<td> 2 </td>
<td> NCAP legacy payload is an ICMP payload; lint0 is ICMP type;
	lint1 is ICMP code </td>
</tr>

</table>
 */

#endif /* PBNMSG_ISC_NCAP_H */
